AWSTemplateFormatVersion: "2010-09-09"

Description: >
  This template builds an AWS CodePipeline pipeline that implements a continuous delivery release
  process. This is the build pipeline for the development of the Polly Papers system. https://github.com/drumadrian/Polly-Whitepapers 

Parameters: 
  Email:
    Description: The email address where CodePipeline sends pipeline notifications
    Type: String
    Default: "adrian@adriandrummond.com"

  BranchName:
    Description: A name for the codecommit repo Branch
    Type: String
    Default: "master"

  GitHubOwner:
    Description: Owner of the GitHub repo
    Type: String
    Default: "awsgurus"

  GitHubRepo:
    Description: The name of the GitHub repo
    Type: String
    Default: "awsgurus"

  GitHubToken:
    Description: The OAUTH token from GitHub
    Type: String
    Default: "awsgurus"

  GitHubUrl:
    Description: The URL to the Git Repository
    Type: String
    Default: "awsgurus"



Resources:


  ArtifactStoreBucket:
    Type: AWS::S3::Bucket
    Properties:
      VersioningConfiguration:
        Status: Enabled

  pollypapersrep:
    Type: AWS::CodeCommit::Repository
    Properties:
      RepositoryName: !Join [ -, [!Ref 'AWS::StackName', 'repo' ] ]
      RepositoryDescription: "A clone of all the code that is also stored in Assembla."
      Triggers:
      - Name: MasterTrigger
        CustomData: no custom data
        DestinationArn:
          Ref: CodePipelineSNSTopic
        Branches:
        - Master
        Events:
        - all

  CodePipelineSNSTopic:
    Type: AWS::SNS::Topic
    Properties:
      Subscription:
        - Endpoint: !Ref Email
          Protocol: email

  CodePipelineSNSTopicPolicy:
    Type: AWS::SNS::TopicPolicy
    Properties:
      Topics:
        - !Ref CodePipelineSNSTopic 
      PolicyDocument:
        Id: Id1
        Version: '2012-10-17'
        Statement:
        - Sid: StatementID1
          Effect: Allow
          Principal:
            Service:
            - 'events.amazonaws.com' # Allow CloudWatch Events
            - 'budgets.amazonaws.com' # Allow Budget Notifications
            - 'rds.amazonaws.com' # Allow RDS Events
            - 's3.amazonaws.com' # Allow S3 Event Notifications
          Action: 'sns:Publish'
          Resource: !Ref CodePipelineSNSTopic
        - Sid: Sid2
          Effect: Allow
          Principal:
            AWS: '*' # Allow CloudWatch Alarms, ElastiCache Notifications, Elastic Beanstalk Notifications, Auto Scaling Notification
          Action: 'sns:Publish'
          Resource: !Ref CodePipelineSNSTopic
          Condition:
            StringEquals:
              'AWS:SourceOwner': !Ref 'AWS::AccountId'


  SourceEvent:
    Properties:
      Description: Rule for Amazon CloudWatch Events to detect changes to the source repository and trigger pipeline execution
      EventPattern:
        source:
        - aws.codecommit
        detail:
          event:
          - referenceCreated
          - referenceUpdated
          referenceName:
          - !Ref BranchName
          referenceType:
          - branch
        detail-type:
        - CodeCommit Repository State Change
        resources:
        - !GetAtt 'pollypapersrep.Arn'
      Name: !Sub "${AWS::StackName}-SourceEvent"
      State: ENABLED
      Targets: 
        - Arn: !Join
          - ':'
          - - arn
            - aws
            - codepipeline
            - !Ref 'AWS::Region'
            - !Ref 'AWS::AccountId'
            - !Sub "${AWS::StackName}"
          Id: ProjectPipelineTarget
          RoleArn: !GetAtt 'pollypapersCodeCloudWatchRole.Arn'
    Type: AWS::Events::Rule

  pollypapersCodeCloudWatchRole:
    Description: IAM role to allow Amazon CloudWatch Events to trigger AWS CodePipeline execution
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action: sts:AssumeRole
          Effect: Allow
          Principal:
            Service:
            - events.amazonaws.com
          Sid: 1
      Policies:
      - PolicyDocument:
          Statement:
          - Action:
            - codepipeline:StartPipelineExecution
            Effect: Allow
            Resource:
              - !Join
                - ':'
                - - arn
                  - aws
                  - codepipeline
                  - !Ref 'AWS::Region'
                  - !Ref 'AWS::AccountId'
                  - !Ref 'AWS::StackName'
        PolicyName: !Join [ -, [!Ref 'AWS::StackName', 'pollypapersCodeCloudWatchPolicy'] ]
      RoleName: !Sub "${AWS::StackName}-Role"
    Type: AWS::IAM::Role

  CodeBuildRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action: ['sts:AssumeRole']
          Effect: Allow
          Principal:
            Service: [codebuild.amazonaws.com]
        Version: '2012-10-17'
      Path: /
      Policies:
        - PolicyName: !Sub "${AWS::StackName}-CodeBuildAccess"
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Action:
                - 'logs:*'
                - 'ec2:*'
                - 's3:*'
                - 'iam:*'
                - 'ssm:*'
                - 'cloudformation:*'
                - 'sns:*'
                - 'kms:*'
                - 'ds:*'
                - 'es:*'
                - 'route53:*'
                - 'cloud9:*'
                Effect: Allow
                Resource: '*'
        
  PipelineRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action: ['sts:AssumeRole']
          Effect: Allow
          Principal:
            Service: [codepipeline.amazonaws.com]
        Version: '2012-10-17'
      Path: /
      Policies:
        - PolicyName: !Sub "${AWS::StackName}-CodePipelineAccess"
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Action:
                - 's3:*'
                - 'cloudformation:CreateStack'
                - 'cloudformation:DescribeStacks'
                - 'cloudformation:DeleteStack'
                - 'cloudformation:UpdateStack'
                - 'cloudformation:CreateChangeSet'
                - 'cloudformation:ExecuteChangeSet'
                - 'cloudformation:DeleteChangeSet'
                - 'cloudformation:DescribeChangeSet'
                - 'cloudformation:SetStackPolicy'
                - 'iam:PassRole'
                - 'sns:Publish'
                - 'codecommit:*'
                - 'codebuild:*'
                Effect: Allow
                Resource: '*'




















  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      ArtifactStore:
        Location: !Ref 'ArtifactStoreBucket'
        Type: S3
      DisableInboundStageTransitions: []
      Name: !Sub "${AWS::StackName}"
      RoleArn: !GetAtt [PipelineRole, Arn]
      Stages:

        - Name: Fetch_Source
          Actions:
            - Name: SourceCode
              ActionTypeId:
                Category: Source
                Owner: AWS
                Provider: CodeCommit
                Version: '1'
              Configuration:
                BranchName: !Ref BranchName 
                PollForSourceChanges: false
                RepositoryName: !Join [ -, [!Ref 'AWS::StackName', 'repo'] ]
              OutputArtifacts:
                - Name: code
              RunOrder: '1'

        - Name: Build_Network
          Actions:
            - Name: Build_VPC
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: '1'
              InputArtifacts:
                - Name: code
              Configuration:
                ProjectName: !Join [ -, [!Ref 'AWS::StackName', 'build-VPC'] ]
              RunOrder: '1'
              OutputArtifacts:
                - Name: output-build-VPC


            - Name: Build_Lambda_Functions
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: '1'
              InputArtifacts:
                - Name: code
              Configuration:
                ProjectName: !Join [ -, [!Ref 'AWS::StackName', 'build_lambda'] ]
              RunOrder: '1'
              OutputArtifacts:
                - Name: output-build-lambda


            - Name: Deploy_Lambda_Functions
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: '1'
              InputArtifacts:
                - Name: code
              Configuration:
                ProjectName: !Join [ -, [!Ref 'AWS::StackName', 'deploy_lambda'] ]
              RunOrder: '1'
              OutputArtifacts:
                - Name: output-deploy-lambda


            - Name: Deploy_Step_Functions
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: '1'
              InputArtifacts:
                - Name: code
              Configuration:
                ProjectName: !Join [ -, [!Ref 'AWS::StackName', 'deploy_step'] ]
              RunOrder: '1'
              OutputArtifacts:
                - Name: output-deploy-step


        - Name: Start_Automated_Tests
          Actions:
            - Name: Start_Upload_Test
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: '1'
              InputArtifacts:
                - Name: code
              Configuration:
                ProjectName: !Join [ -, [!Ref 'AWS::StackName', 'start_automated_tests'] ]
              RunOrder: '1'
              OutputArtifacts:
                - Name: output-start-upload-test


        - Name: Publish_Public_Artifacts
          Actions:
            - Name: Publish_Cloudformation_Template
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: '1'
              InputArtifacts:
                - Name: code
              Configuration:
                ProjectName: !Join [ -, [!Ref 'AWS::StackName', 'publish_pipeline_template'] ]
              RunOrder: '1'
              OutputArtifacts:
                - Name: output-publish-pipeline-template


            - Name: Test_Published_Cloudformation_Template
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: '1'
              InputArtifacts:
                - Name: code
              Configuration:
                ProjectName: !Join [ -, [!Ref 'AWS::StackName', 'test_published_template'] ]
              RunOrder: '1'
              OutputArtifacts:
                - Name: output-test-published-template



  CodeBuildProjectBuildVPC:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Join [ -, [!Ref 'AWS::StackName', 'build-VPC'] ]
      ServiceRole: !Ref CodeBuildRole
      Artifacts:
        Type: CODEPIPELINE
      BadgeEnabled: false
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/python:3.6.5
        EnvironmentVariables:
          - Name: codecommithttpsname
            Value: !GetAtt pollypapersrep.Name
            Type: PLAINTEXT
          - Name: codecommithttpsurl
            Value: !GetAtt pollypapersrep.CloneUrlHttp
            Type: PLAINTEXT
          - Name: codecommithttpsurlSSM
            Value: !Sub "${AWS::StackName}-pollypapersrepURL"
            Type: PARAMETER_STORE
          - Name: codepipelinesnstopicarn
            Value: !Ref CodePipelineSNSTopic
            Type: PLAINTEXT
      Source:
        BuildSpec: deployment_pipeline/buildspec_vpc.yml
        GitCloneDepth: 0
        Type: CODEPIPELINE
      TimeoutInMinutes: 17



  CodeBuildProjectBuildLambda:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Join [ -, [!Ref 'AWS::StackName', 'build_lambda'] ]
      ServiceRole: !Ref CodeBuildRole
      Artifacts:
        Type: CODEPIPELINE
      BadgeEnabled: false
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/python:3.6.5
        EnvironmentVariables:
          - Name: codecommithttpsname
            Value: !GetAtt pollypapersrep.Name
            Type: PLAINTEXT
          - Name: codecommithttpsurl
            Value: !GetAtt pollypapersrep.CloneUrlHttp
            Type: PLAINTEXT
          - Name: codecommithttpsurlSSM
            Value: !Sub "${AWS::StackName}-pollypapersrepURL"
            Type: PARAMETER_STORE
          - Name: codepipelinesnstopicarn
            Value: !Ref CodePipelineSNSTopic
            Type: PLAINTEXT
      Source:
        BuildSpec: deployment_pipeline/buildspec_build_lambda.yml
        GitCloneDepth: 0
        Type: CODEPIPELINE
      TimeoutInMinutes: 17




  CodeBuildProjectDeployLambda:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Join [ -, [!Ref 'AWS::StackName', 'deploy_lambda'] ]
      ServiceRole: !Ref CodeBuildRole
      Artifacts:
        Type: CODEPIPELINE
      BadgeEnabled: false
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/python:3.6.5
        EnvironmentVariables:
          - Name: codecommithttpsname
            Value: !GetAtt pollypapersrep.Name
            Type: PLAINTEXT
          - Name: codecommithttpsurl
            Value: !GetAtt pollypapersrep.CloneUrlHttp
            Type: PLAINTEXT
          - Name: codecommithttpsurlSSM
            Value: !Sub "${AWS::StackName}-pollypapersrepURL"
            Type: PARAMETER_STORE
          - Name: codepipelinesnstopicarn
            Value: !Ref CodePipelineSNSTopic
            Type: PLAINTEXT
      Source:
        BuildSpec: deployment_pipeline/buildspec_deploy_lambda.yml
        GitCloneDepth: 0
        Type: CODEPIPELINE
      TimeoutInMinutes: 10





  CodeBuildProjectDeployStep:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Join [ -, [!Ref 'AWS::StackName', 'deploy_step'] ]
      ServiceRole: !Ref CodeBuildRole
      Artifacts:
        Type: CODEPIPELINE
      BadgeEnabled: false
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/python:3.6.5
        EnvironmentVariables:
          - Name: codecommithttpsname
            Value: !GetAtt pollypapersrep.Name
            Type: PLAINTEXT
          - Name: codecommithttpsurl
            Value: !GetAtt pollypapersrep.CloneUrlHttp
            Type: PLAINTEXT
          - Name: codecommithttpsurlSSM
            Value: !Sub "${AWS::StackName}-pollypapersrepURL"
            Type: PARAMETER_STORE
          - Name: codepipelinesnstopicarn
            Value: !Ref CodePipelineSNSTopic
            Type: PLAINTEXT
      Source:
        BuildSpec: deployment_pipeline/buildspec_deploy_step.yml
        GitCloneDepth: 0
        Type: CODEPIPELINE
      TimeoutInMinutes: 10




  CodeBuildProjectStartAutomatedTests:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Join [ -, [!Ref 'AWS::StackName', 'start_automated_tests'] ]
      ServiceRole: !Ref CodeBuildRole
      Artifacts:
        Type: CODEPIPELINE
      BadgeEnabled: false
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/python:3.6.5
        EnvironmentVariables:
          - Name: codecommithttpsname
            Value: !GetAtt pollypapersrep.Name
            Type: PLAINTEXT
          - Name: codecommithttpsurl
            Value: !GetAtt pollypapersrep.CloneUrlHttp
            Type: PLAINTEXT
          - Name: codecommithttpsurlSSM
            Value: !Sub "${AWS::StackName}-pollypapersrepURL"
            Type: PARAMETER_STORE
          - Name: codepipelinesnstopicarn
            Value: !Ref CodePipelineSNSTopic
            Type: PLAINTEXT
      Source:
        BuildSpec: deployment_pipeline/buildspec_start_automated_tests.yml
        GitCloneDepth: 0
        Type: CODEPIPELINE
      TimeoutInMinutes: 10



  CodeBuildProjectPublishPipelineTemplate:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Join [ -, [!Ref 'AWS::StackName', 'publish_pipeline_template'] ]
      ServiceRole: !Ref CodeBuildRole
      Artifacts:
        Type: CODEPIPELINE
      BadgeEnabled: false
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/python:3.6.5
        EnvironmentVariables:
          - Name: codecommithttpsname
            Value: !GetAtt pollypapersrep.Name
            Type: PLAINTEXT
          - Name: codecommithttpsurl
            Value: !GetAtt pollypapersrep.CloneUrlHttp
            Type: PLAINTEXT
          - Name: codecommithttpsurlSSM
            Value: !Sub "${AWS::StackName}-pollypapersrepURL"
            Type: PARAMETER_STORE
          - Name: codepipelinesnstopicarn
            Value: !Ref CodePipelineSNSTopic
            Type: PLAINTEXT
      Source:
        BuildSpec: deployment_pipeline/buildspec_publish_pipeline_template.yml
        GitCloneDepth: 0
        Type: CODEPIPELINE
      TimeoutInMinutes: 10



  CodeBuildProjectTestPublishedPipelineTemplate:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Join [ -, [!Ref 'AWS::StackName', 'test_published_template'] ]
      ServiceRole: !Ref CodeBuildRole
      Artifacts:
        Type: CODEPIPELINE
      BadgeEnabled: false
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/python:3.6.5
        EnvironmentVariables:
          - Name: codecommithttpsname
            Value: !GetAtt pollypapersrep.Name
            Type: PLAINTEXT
          - Name: codecommithttpsurl
            Value: !GetAtt pollypapersrep.CloneUrlHttp
            Type: PLAINTEXT
          - Name: codecommithttpsurlSSM
            Value: !Sub "${AWS::StackName}-pollypapersrepURL"
            Type: PARAMETER_STORE
          - Name: codepipelinesnstopicarn
            Value: !Ref CodePipelineSNSTopic
            Type: PLAINTEXT
      Source:
        BuildSpec: deployment_pipeline/buildspec_test_published_pipeline_template.yml
        GitCloneDepth: 0
        Type: CODEPIPELINE
      TimeoutInMinutes: 10











  SSMparameterpollypapersrepURL:
    Type: "AWS::SSM::Parameter"
    Properties: 
      Description: The URL of the AWS CodeCommit Repository
      Name: !Sub "${AWS::StackName}-pollypapersrepURL"
      Type: String
      Value: !GetAtt pollypapersrep.CloneUrlHttp


  SSMparameterpollypapersrepName:
    Type: "AWS::SSM::Parameter"
    Properties: 
      Description: The Name of the AWS CodeCommit Repository
      Name: !Sub "${AWS::StackName}-clonerepositorydocumentnamename"
      Type: String
      Value: !GetAtt pollypapersrep.Name

Outputs:
  StackVPC:
    Description: The name of the AWS S3 deployment bucket
    Value: !Ref ArtifactStoreBucket
    Export:
      Name: !Sub "${AWS::StackName}-ArtifactStoreBucket"


  pollypapersrepURL:
    Description: The URL of the AWS CodeCommit Repository
    Value: !GetAtt pollypapersrep.CloneUrlHttp
    Export:
      Name: !Sub "${AWS::StackName}-pollypapersrepURL"


  pollypapersrepName:
    Description: The Name of the AWS CodeCommit Repository
    Value: !GetAtt pollypapersrep.Name
    Export:
      Name: !Sub "${AWS::StackName}-pollypapersrepName"




