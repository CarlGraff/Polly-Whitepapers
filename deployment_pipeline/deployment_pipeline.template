
---
AWSTemplateFormatVersion: 2010-09-09
Description: Hugo Site - CodePipeline

Parameters:

  EnvType: 
    Description: Environment type.
    Default: prod
    Type: String
    AllowedValues: 
      - prod
      - test
      - staging
    ConstraintDescription: must specify prod or test...or staging.
 
  s3DeploymentBucketName:
    Type: String
    Description: Bucket to store public artifacts
  CodePipelineName:
    Type: String
  CodePipelineS3Bucket:
    Type: String
  GitHubOwner:
    Type: String
  GitHubRepo:
    Type: String
  GitHubBranch:
    Type: String
  GitHubToken:
    Type: String
    NoEcho: True
  ArtifactsName:
    Type: String
  GitHubUrl:
    Type: String



# TODO Create s3 bucket miscellaneous

Conditions: 
  CreateProdResources: !Equals [ !Ref EnvType, prod ]
  CreateStagingResources: !Equals [ !Ref EnvType, staging ]

Resources:



  CodePipelineServiceRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: "UniqueCodepipelineServiceRole"
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          -
            Sid: trust
            Effect: Allow
            Principal:
              Service:
                - codepipeline.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/AWSCodePipelineCustomActionAccess"


  CodePipelineDeploy:
    Type: "AWS::CodePipeline::Pipeline"
    Properties:
      Name: !Ref CodePipelineName
      ArtifactStore:
        Location: !Ref CodePipelineS3Bucket
        Type: S3
      RoleArn: !GetAtt CodePipelineServiceRole.Arn

      Stages:
        - Name: Source
          Actions:
            - ActionTypeId:
                Owner: "ThirdParty"
                Category: Source
                Provider: GitHub
                Version: 1
              Name: GitHubCommit
              Configuration:
                Owner: !Ref GitHubOwner
                Repo: !Ref GitHubRepo
                Branch: !Ref GitHubBranch
                OAuthToken: !Ref GitHubToken
              OutputArtifacts:
                - Name: !Join [ '', [ !Ref ArtifactsName, '_GitHubSource' ] ]




        - Name: BuildAndDeploy
          Actions:
            - Name: HugoSiteStaging
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: 1
              Configuration:
                ProjectName: CodeBuild1
              InputArtifacts:
                - Name: !Join [ '', [ !Ref ArtifactsName, '_GitHubSource' ] ]
              OutputArtifacts: []


            - Name: HugoSiteApproval
              ActionTypeId:
                Category: Approval
                Owner: AWS
                Provider: Manual
                Version: 1


            - Name: HugoSiteProduction
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: 1
              Configuration:
                ProjectName:  CodeBuild2
              InputArtifacts:
                - Name: !Join [ '', [ !Ref ArtifactsName, '_GitHubSource' ] ]
              OutputArtifacts: []

  






  CodeBuild1:
    Type: "AWS::CodeBuild::Project"
    Properties:
      Artifacts:
        Location: !Ref s3DeploymentBucketPRODUCTION
        Name: CodeBuildArtifacts
        Packaging: NONE
        Type: S3
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: python:3.6
        Type: LINUX_CONTAINER
      Name: CodeBuild1
      ServiceRole: !Ref CodeBuildServiceRole
      Source:
        Auth:
          Type: OAUTH
          Resource: GITHUB
        BuildSpec: build1.yaml
        Location: !Ref GitHubUrl
        Type: GITHUB






  CodeBuild2:
    Type: "AWS::CodeBuild::Project"
    Properties:
      Artifacts:
        Location: !Ref s3DeploymentBucketPRODUCTION
        Name: CodeBuildArtifacts
        Packaging: NONE
        Type: S3
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: python:3.6
        Type: LINUX_CONTAINER
      Name: CodeBuild2
      ServiceRole: !Ref CodeBuildServiceRole
      Source:
        Auth:
          Type: OAUTH
          Resource: GITHUB
        BuildSpec: build2.yaml
        Location: !Ref GitHubUrl
        Type: GITHUB



  CodeBuildServiceRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: 'CodeBuildServiceRole'
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          -
            Sid: trust
            Effect: Allow
            Principal:
              Service:
                - codebuild.amazonaws.com
            Action: sts:AssumeRole



  s3DeploymentBucketPRODUCTION:
    Condition: CreateProdResources
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub '${s3DeploymentBucketName}${EnvType}'


  s3DeploymentBucketSTAGING:
    Condition: CreateStagingResources
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub '${s3DeploymentBucketName}${EnvType}'




Outputs:
  s3DeploymentBucketName:
    Description: The name the Bucket to Store Objects
    Value: !Sub '${s3DeploymentBucketName}${EnvType}'
    Export:
      Name: !Sub '${AWS::StackName}-${s3DeploymentBucketName}${EnvType}'



